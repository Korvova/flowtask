<?php
/**
 * Test Subtask Creation Trigger
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á
 */

require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_before.php');

use Bitrix\Main\Loader;

header('Content-Type: text/html; charset=utf-8');

if (!Loader::includeModule('tasks')) {
    echo "‚ùå Tasks module not found\n";
    exit;
}

$taskId = isset($_GET['taskId']) ? (int)$_GET['taskId'] : 8;

echo "<h1>üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á</h1>\n";
echo "<p>–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É #$taskId</p>\n";

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É
$task = \CTasks::GetByID($taskId, false);
if (!$taskData = $task->Fetch()) {
    echo "‚ùå –ó–∞–¥–∞—á–∞ #$taskId –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n";
    exit;
}

echo "<h2>üìã –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞:</h2>\n";
echo "<ul>\n";
echo "<li><strong>ID:</strong> {$taskData['ID']}</li>\n";
echo "<li><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {$taskData['TITLE']}</li>\n";
echo "<li><strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</strong> {$taskData['STATUS']}</li>\n";
echo "<li><strong>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:</strong> {$taskData['RESPONSIBLE_ID']}</li>\n";
echo "</ul>\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
global $DB;
$query = "SELECT process_data FROM telegsarflow_processes WHERE task_id = " . intval($taskId);
$result = $DB->Query($query);

if (!$row = $result->Fetch()) {
    echo "<p>‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏</p>\n";
    exit;
}

$processData = json_decode($row['process_data'], true);

echo "<h2>üìä –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–∞:</h2>\n";
echo "<pre>" . json_encode($processData, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT) . "</pre>\n";

// –°—á–∏—Ç–∞–µ–º –±—É–¥—É—â–∏–µ –∑–∞–¥–∞—á–∏
$futureTasksCount = 0;
foreach ($processData['nodes'] as $node) {
    if (isset($node['data']['id']) && $node['data']['id'] === 'new') {
        $futureTasksCount++;
        echo "<div style='background: #fef3c7; padding: 15px; margin: 10px 0; border-left: 4px solid #f59e0b;'>\n";
        echo "<strong>üîÆ –ë—É–¥—É—â–∞—è –∑–∞–¥–∞—á–∞:</strong><br>\n";
        echo "ID —É–∑–ª–∞: {$node['id']}<br>\n";
        echo "–ù–∞–∑–≤–∞–Ω–∏–µ: {$node['data']['title']}<br>\n";
        echo "–£—Å–ª–æ–≤–∏–µ: {$node['data']['condition']}<br>\n";
        echo "</div>\n";
    }
}

if ($futureTasksCount === 0) {
    echo "<p>‚ö†Ô∏è –ù–µ—Ç –±—É–¥—É—â–∏—Ö –∑–∞–¥–∞—á –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ (–≤—Å–µ –∑–∞–¥–∞—á–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã)</p>\n";
}

// –§–æ—Ä–º–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
echo "<h2>üéÆ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏:</h2>\n";
echo "<form method='POST' action=''>\n";
echo "<input type='hidden' name='taskId' value='$taskId'>\n";
echo "<select name='newStatus'>\n";
echo "<option value='1'>1 - –ù–æ–≤–∞—è</option>\n";
echo "<option value='2'>2 - –ñ–¥—ë—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</option>\n";
echo "<option value='3' " . ($taskData['STATUS'] == 3 ? 'selected' : '') . ">3 - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</option>\n";
echo "<option value='4'>4 - –ñ–¥—ë—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è</option>\n";
echo "<option value='5'>5 - –ó–∞–≤–µ—Ä—à–µ–Ω–∞</option>\n";
echo "<option value='6'>6 - –û—Ç–ª–æ–∂–µ–Ω–∞</option>\n";
echo "<option value='7'>7 - –û—Ç–∫–ª–æ–Ω–µ–Ω–∞</option>\n";
echo "</select>\n";
echo "<button type='submit' name='action' value='update' style='margin-left: 10px; padding: 10px 20px; background: #667eea; color: white; border: none; border-radius: 5px; cursor: pointer;'>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å</button>\n";
echo "</form>\n";

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
if ($_POST['action'] === 'update' && isset($_POST['newStatus'])) {
    $newStatus = (int)$_POST['newStatus'];

    echo "<div style='background: #e0f2fe; padding: 15px; margin: 20px 0; border-left: 4px solid #0284c7;'>\n";
    echo "<strong>üîÑ –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏...</strong><br>\n";

    $taskObject = new \CTasks();
    $updateResult = $taskObject->Update($taskId, [
        'STATUS' => $newStatus
    ], ['REGISTER_SONET_EVENT' => 'Y']);

    if ($updateResult) {
        echo "‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ $newStatus<br>\n";
        echo "‚è≥ –û–∂–∏–¥–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏...<br>\n";

        // –ü–æ–¥–æ–∂–¥—ë–º —Å–µ–∫—É–Ω–¥—É, —á—Ç–æ–±—ã —Å–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–æ—Å—å
        sleep(1);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª–∞—Å—å –ª–∏ –ø–æ–¥–∑–∞–¥–∞—á–∞
        $checkQuery = "SELECT process_data FROM telegsarflow_processes WHERE task_id = " . intval($taskId);
        $checkResult = $DB->Query($checkQuery);
        $updatedRow = $checkResult->Fetch();
        $updatedProcess = json_decode($updatedRow['process_data'], true);

        $newTaskCreated = false;
        foreach ($updatedProcess['nodes'] as $node) {
            if (isset($node['data']['id']) && $node['data']['id'] !== 'new' && !isset($processData['nodes'][array_search($node, $updatedProcess['nodes'])]['data']['id'])) {
                $newTaskCreated = true;
                echo "‚úÖ <strong>–ü–û–î–ó–ê–î–ê–ß–ê –°–û–ó–î–ê–ù–ê!</strong><br>\n";
                echo "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ ID: {$node['data']['id']}<br>\n";
                echo "–ù–∞–∑–≤–∞–Ω–∏–µ: {$node['data']['title']}<br>\n";
            }
        }

        if (!$newTaskCreated) {
            echo "‚ö†Ô∏è –ü–æ–¥–∑–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:<br>\n";
            echo "- –£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞<br>\n";
            echo "- –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–±—ã—Ç–∏—è<br>\n";
            echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: <code>tail -f /var/log/php8.3-fpm.log | grep Telegsarflow</code><br>\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞<br>\n";
    }

    echo "</div>\n";

    echo "<p><a href='?taskId=$taskId' style='padding: 10px 20px; background: #667eea; color: white; text-decoration: none; border-radius: 5px;'>–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</a></p>\n";
}

echo "<hr>\n";
echo "<p><small>üí° –°–æ–≤–µ—Ç: –æ—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ <code>tail -f /var/log/php8.3-fpm.log | grep Telegsarflow</code> —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</small></p>\n";
